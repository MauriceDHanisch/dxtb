"""Data for testing repulsion taken from https://github.com/grimme-lab/mstore"""

from __future__ import annotations
import torch

from xtbml.typing import Tensor, Molecule
from xtbml.utils import symbol2number


class Record(Molecule):
    """Format of reference records containing GFN1-xTB and GFN2-xTB reference values."""

    charge: Tensor
    """Total charge of the molecule"""

    escf: Tensor
    """SCF energy for GFN1-xTB"""


samples: dict[str, Record] = {
    "Ag2Cl22-": {
        "numbers": symbol2number("Ag Ag Cl Cl Cl Cl".split()),
        "positions": torch.tensor(
            [
                [0.00000000000000, -3.10725336044816, 0.00000000000000],
                [0.00000000000000, 3.10725336044816, 0.00000000000000],
                [-3.35382227578130, 0.00000000000000, 0.00000000000000],
                [0.00000000000000, -7.48233203321965, 0.00000000000000],
                [0.00000000000000, 7.48233203321965, 0.00000000000000],
                [3.35382227578130, 0.00000000000000, 0.00000000000000],
            ],
        ),
        "charge": torch.tensor(-2.0),
        "escf": torch.tensor(-2.5297870091005e01),
    },
    "Al3+Ar6": {
        "numbers": symbol2number("Al Ar Ar Ar Ar Ar Ar".split()),
        "positions": torch.tensor(
            [
                [0.00000000000000, 0.00000000000000, 0.00000000000000],
                [-4.83361416932971, 0.00000000000000, -0.00000000000000],
                [4.83361416932971, -0.00000000000000, 0.00000000000000],
                [0.00000000000000, -0.00000000000000, -4.83361416932971],
                [0.00000000000000, -0.00000000000000, 4.83361416932971],
                [0.00000000000000, 4.83361416932971, 0.00000000000000],
                [-0.00000000000000, -4.83361416932971, 0.00000000000000],
            ],
        ),
        "charge": torch.tensor(3.0),
        "escf": torch.tensor(-3.6303223981129e01),
    },
    "AD7en+": {
        "numbers": symbol2number(
            "c c c c c c c h h h h h h h h h h h h h h h h c c c c c c c h h h h h h h h h".split()
        ),
        "positions": torch.tensor(
            [
                [-3.20868398218451, 0.81338576920721, 0.00000000000000],
                [-2.74527806469722, -0.72094646635770, 2.39932976171515],
                [-2.74527806469722, -0.72094646635770, -2.39932976171515],
                [-3.08987706868245, 0.88032712755882, 4.78050218429059],
                [-3.08987706868245, 0.88032712755882, -4.78050218429059],
                [-2.24991924121552, -0.49947849598937, 7.15458157802629],
                [-2.24991924121552, -0.49947849598937, -7.15458157802629],
                [-1.96613220283514, 2.46542593163266, 0.00000000000000],
                [-5.14977393132991, 1.50790279463433, 0.00000000000000],
                [-0.82880270075724, -1.49583753208091, 2.35732742755509],
                [-4.05166617831319, -2.31485469244108, 2.45612685682732],
                [-0.82880270075724, -1.49583753208091, -2.35732742755509],
                [-4.05166617831319, -2.31485469244108, -2.45612685682732],
                [-2.02552326389203, 2.64082825102477, 4.58976889067168],
                [-5.07842495481751, 1.39500213203172, 4.96726265317654],
                [-2.02552326389203, 2.64082825102477, -4.58976889067168],
                [-5.07842495481751, 1.39500213203172, -4.96726265317654],
                [-0.19533746504355, -0.83162969141366, 7.10835455754267],
                [-3.17654001815395, -2.32666104233015, 7.30973305003174],
                [-2.66710444394322, 0.60519698375962, 8.83560037797207],
                [-0.19533746504355, -0.83162969141366, -7.10835455754267],
                [-3.17654001815395, -2.32666104233015, -7.30973305003174],
                [-2.66710444394322, 0.60519698375962, -8.83560037797207],
                [4.44203589533023, -0.61191376271149, 0.00000000000000],
                [3.87926904943266, 0.51011020933180, -2.29251661260312],
                [3.87926904943266, 0.51011020933180, 2.29251661260312],
                [4.24448794558471, -0.68450742413506, -4.64062864339737],
                [4.24448794558471, -0.68450742413506, 4.64062864339737],
                [3.52165215472345, 0.39151447005582, -6.85288366051549],
                [3.52165215472345, 0.39151447005582, 6.85288366051549],
                [5.27500886512691, -2.48123073761105, 0.00000000000000],
                [3.05171150894116, 2.38307971640241, -2.29573309948118],
                [3.05171150894116, 2.38307971640241, 2.29573309948118],
                [5.06297978890177, -2.55837272686144, -4.64288433189127],
                [5.06297978890177, -2.55837272686144, 4.64288433189127],
                [2.78315503816840, 2.29140452560769, -6.91431707203879],
                [3.86656025085084, -0.52052884030713, -8.64049586076960],
                [2.78315503816840, 2.29140452560769, 6.91431707203879],
                [3.86656025085084, -0.52052884030713, 8.64049586076960],
            ],
        ),
        "charge": torch.tensor(1.0),
        "escf": torch.tensor(-4.3226840214360e01),
    },
    "C2H4F+": {
        "numbers": symbol2number("C C F H H H H".split()),
        "positions": torch.tensor(
            [
                [-0.00000000000000, +1.38825959869068, -0.28096500207358],
                [-0.00000000000000, -1.38825959869068, -0.28096500207358],
                [+0.00000000000000, +0.00000000000000, +2.33689103853566],
                [-1.78408589032842, +2.42537442958257, -0.44374025859713],
                [+1.78408589032842, +2.42537442958257, -0.44374025859713],
                [-1.78408589032842, -2.42537442958257, -0.44374025859713],
                [+1.78408589032842, -2.42537442958257, -0.44374025859713],
            ],
        ),
        "charge": torch.tensor(1.0),
        "escf": torch.tensor(-1.1004178291636e01),
    },
    "ZnOOH-": {
        "numbers": symbol2number("Zn O O H".split()),
        "positions": torch.tensor(
            [
                [-0.30631629283878, -1.11507514203552, 0.00000000000000],
                [-0.06543072660074, -4.32862093666082, 0.00000000000000],
                [-0.64012239724097, 2.34966763895920, 0.00000000000000],
                [1.01186941668051, 3.09402843973713, 0.00000000000000],
            ],
        ),
        "charge": torch.tensor(-1.0),
        "escf": torch.tensor(-1.0913986485487e01),
    },
}
